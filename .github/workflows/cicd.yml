name: my first cicd

on:
  push:
    branches:
      - main

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4.1.7
        
  #     - name: Setup Node.js environment
  #       uses: actions/setup-node@v4.0.3
  #       with:
  #         node-version: '20'

  #     - name: Install dependencies
  #       run: npm install
        
  #     - name: Run test
  #       run: npm test
        
  # build:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Docker Setup Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v3.6.1
  #       with:
  #         path: /temp/.build-cache
  #         key: ${{runner.os}}-buildx-${{github.sha}}
  #         restore-keys: |
  #           ${{runner.os}}-buildx-

  #     - name: Login to Github container registry
  #       uses: docker/login-action@v3.3.0
  #       with:
  #         registry: ghcr.io
  #         username: ${{github.actor}}
  #         password: ${{secrets.GHCR_TOKEN}}
          
  #     - name: Build and push
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: true
  #         tags: ghcr.io/sangddong/my-image:latest

  deploy:
    # needs: build
    name: Deploy
    runs-on: [self-hosted, sangddong]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v3.3.0
        with: 
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GHCR_TOKEN}}

      - name: Debug info
        run: |
          echo "Current user: $(whoami)"
          echo "Docker info:"
          docker info
          echo "Docker version:"
          docker version
          
      - name: Docker run
        run: |
          sudo docker stop temp-container-name || true
          sudo docker rm temp-container-name || true
          sudo docker rmi ghcr.io/sangddong/my-image:latest || true
          sudo docker run -d -p 80:3001 \
          --name temp-container-name \
          --restart always \
          -e PORT=${{ secrets.PORT }} \
          -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
          ghcr.io/sangddong/my-image:latest

